{
  "fe.root": "This section contains all the feature engineering-related settings.",
  "fe.general.header": "This section shows basic information of the template <b> { templateName } </b>.",
  "fe.general.id": "The unique identifier of this template in the database.",
  "fe.general.name": "The name of the template.",
  "fe.general.predictedAsset": "The asset we want to predict.",
  "fe.general.created": "Timestamp when this template was created.",
  "fe.general.updated": "Timestamp when this template was last updated.",
  "fe.baseAssets": "<p>Base assets are the list of assets that are loaded into original feature set, before dynamic features are being generated (e.g. TA indicators added as assets).</p><p>You can either list out completely by using the selector component, or toggle to 'ALL', which will result in loading all assets from the S3 bucket you store all your assets.</p>",
  "fe.ta.header": "<p>Technical analysis features are generated from the following indicators: <b>Bollinger Band</b>, <b>Relative Strength Indicator (RSI)</b> and <b>Simple Moving Average (SMA)</b></p><p>You can enable/disable this whole feature generation functionality with the section toggle.</p>",
  "fe.ta.bbWindow": "The Bollinger Band window size (in days).",
  "fe.ta.bbWindowDev": "The Bollinger Band window factor standard deviation.",
  "fe.ta.rsiWindow": "The RSI window size (in days).",
  "fe.ta.smaWindow": "The SMA window size (in days).",
  "fe.ta.assets": "The list of the assets we want to generate additional Technical Analyisis features for.",
  "fe.arima.header": "<p>Features to generate from the selected assets with <b>Autoregressive Integrated Moving Average (ARIMA)</b> model.</p><p>You can enable/disable this whole feature generation functionality with the section toggle.</p>",
  "fe.arima.trainSetSize": "The training set size for ARIMA.",
  "fe.arima.assets": "The list of the assets we want to generate additional ARIMA features for.",
  "fe.fft.header": "<p>Features to generate from the selected assets with <b>Fast Fourier Transformation (FFT).</b></p><p>You can enable/disable this whole feature generation functionality with the section toggle.</p>",
  "fe.fft.numComp": "Currently not used.",
  "fe.fft.numSteps": "<p>The number of FFT steps.</p><p></p>",
  "fe.fft.assets": "The list of the <b>ASSET CLASSES</b> we want to generate additional FFT features for.",
  "fe.ae.header": "<p>Parameters for creating autoencoder predictions and add them as features.</p>",
  "fe.ae.optimizer": "Keras optimizer algorithm. See <i>Tensorflow / Keras / Optimizers</i>",
  "fe.ae.loss": "The Keras loss function. For more, please see <b>https://keras.io/api/losses/</b>",
  "fe.ae.fitEpoch": "Number of epochs to train the model. An epoch is an iteration over the entire x and y data provided (unless the steps_per_epoch flag is set to something other than None). Note that in conjunction with initial_epoch, epochs is to be understood as \"final epoch\". The model is not trained for a number of iterations given by epochs, but merely until the epoch of index epochs is reached.",
  "fe.ae.fitBatchSize": "Number of samples per gradient update.",
  "fe.ae.fitShuffle": "Whether to shuffle the training data before each epoch.",
  "deepar.root": "This section contains all the Deep AR Machine Learning algo-related settings.",
  "deepar.general.header": "This section shows all the basic information for the ML settings.",
  "deepar.general.freq": "Prediction unit (1 day).",
  "deepar.general.testWindows": "Number of windows to test on.",
  "deepar.general.predictionLen": "How far the prediction goes into the future.",
  "deepar.general.contextLen": "How far the prediction takes information from the past.",
  "deepar.general.start": "Start date",
  "deepar.general.end": "End date",
  "deepar.hyper.header": "The section contains all hyper parameters that are used in the ML model training.",
  "deepar.hyper.epochs": "The maximum number of passes over the training data. The optimal value depends on your data size and learning rate. See also early_stopping_patience. Typical values range from 10 to 1000.",
  "deepar.hyper.esp": "If this parameter is set, training stops when no progress is made within the specified number of epochs. The model that has the lowest loss is returned as the final model.",
  "deepar.hyper.miniBatchSize": "The size of mini-batches used during training. Typical values range from 32 to 512.",
  "deepar.hyper.learningRate": "The learning rate used in training. Typical values range from 1e-4 to 1e-1.",
  "model.quantiles": "Quantiles. Must be only a <b>number</b>, between 0.0 and 1.0"
}
